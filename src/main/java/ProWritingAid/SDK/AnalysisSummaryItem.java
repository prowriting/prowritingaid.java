/*
 * ProWritingAid API V2
 * Official ProWritingAid API Version 2
 *
 * OpenAPI spec version: v2
 * Contact: hello@prowritingaid.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ProWritingAid.SDK;

import java.util.Objects;
import ProWritingAid.SDK.AnalysisSummaryGraph;
import ProWritingAid.SDK.AnalysisSummarySubItem;
import ProWritingAid.SDK.SuggestionCategory;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AnalysisSummaryItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-15T12:42:14.072+01:00")
public class AnalysisSummaryItem {
  @SerializedName("Text")
  private String text = null;

  @SerializedName("Graph")
  private AnalysisSummaryGraph graph = null;

  @SerializedName("Url")
  private String url = null;

  @SerializedName("UrlText")
  private String urlText = null;

  @SerializedName("SubItems")
  private List<AnalysisSummarySubItem> subItems = null;

  /**
   * Gets or Sets isPositive
   */
  @JsonAdapter(IsPositiveEnum.Adapter.class)
  public enum IsPositiveEnum {
    POSITIVE("Positive"),
    
    NEGATIVE("Negative"),
    
    INFORMATION("Information");

    private String value;

    IsPositiveEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsPositiveEnum fromValue(String text) {
      for (IsPositiveEnum b : IsPositiveEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IsPositiveEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsPositiveEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsPositiveEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IsPositiveEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("IsPositive")
  private IsPositiveEnum isPositive = null;

  @SerializedName("Category")
  private SuggestionCategory category = null;

  @SerializedName("CategoryName")
  private String categoryName = null;

  @SerializedName("NumIssues")
  private Integer numIssues = null;

  public AnalysisSummaryItem text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public AnalysisSummaryItem graph(AnalysisSummaryGraph graph) {
    this.graph = graph;
    return this;
  }

   /**
   * Get graph
   * @return graph
  **/
  @ApiModelProperty(value = "")
  public AnalysisSummaryGraph getGraph() {
    return graph;
  }

  public void setGraph(AnalysisSummaryGraph graph) {
    this.graph = graph;
  }

  public AnalysisSummaryItem url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public AnalysisSummaryItem urlText(String urlText) {
    this.urlText = urlText;
    return this;
  }

   /**
   * Get urlText
   * @return urlText
  **/
  @ApiModelProperty(value = "")
  public String getUrlText() {
    return urlText;
  }

  public void setUrlText(String urlText) {
    this.urlText = urlText;
  }

  public AnalysisSummaryItem subItems(List<AnalysisSummarySubItem> subItems) {
    this.subItems = subItems;
    return this;
  }

  public AnalysisSummaryItem addSubItemsItem(AnalysisSummarySubItem subItemsItem) {
    if (this.subItems == null) {
      this.subItems = new ArrayList<AnalysisSummarySubItem>();
    }
    this.subItems.add(subItemsItem);
    return this;
  }

   /**
   * Get subItems
   * @return subItems
  **/
  @ApiModelProperty(value = "")
  public List<AnalysisSummarySubItem> getSubItems() {
    return subItems;
  }

  public void setSubItems(List<AnalysisSummarySubItem> subItems) {
    this.subItems = subItems;
  }

  public AnalysisSummaryItem isPositive(IsPositiveEnum isPositive) {
    this.isPositive = isPositive;
    return this;
  }

   /**
   * Get isPositive
   * @return isPositive
  **/
  @ApiModelProperty(value = "")
  public IsPositiveEnum getIsPositive() {
    return isPositive;
  }

  public void setIsPositive(IsPositiveEnum isPositive) {
    this.isPositive = isPositive;
  }

  public AnalysisSummaryItem category(SuggestionCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public SuggestionCategory getCategory() {
    return category;
  }

  public void setCategory(SuggestionCategory category) {
    this.category = category;
  }

   /**
   * Get categoryName
   * @return categoryName
  **/
  @ApiModelProperty(value = "")
  public String getCategoryName() {
    return categoryName;
  }

  public AnalysisSummaryItem numIssues(Integer numIssues) {
    this.numIssues = numIssues;
    return this;
  }

   /**
   * Get numIssues
   * @return numIssues
  **/
  @ApiModelProperty(value = "")
  public Integer getNumIssues() {
    return numIssues;
  }

  public void setNumIssues(Integer numIssues) {
    this.numIssues = numIssues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalysisSummaryItem analysisSummaryItem = (AnalysisSummaryItem) o;
    return Objects.equals(this.text, analysisSummaryItem.text) &&
        Objects.equals(this.graph, analysisSummaryItem.graph) &&
        Objects.equals(this.url, analysisSummaryItem.url) &&
        Objects.equals(this.urlText, analysisSummaryItem.urlText) &&
        Objects.equals(this.subItems, analysisSummaryItem.subItems) &&
        Objects.equals(this.isPositive, analysisSummaryItem.isPositive) &&
        Objects.equals(this.category, analysisSummaryItem.category) &&
        Objects.equals(this.categoryName, analysisSummaryItem.categoryName) &&
        Objects.equals(this.numIssues, analysisSummaryItem.numIssues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, graph, url, urlText, subItems, isPositive, category, categoryName, numIssues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalysisSummaryItem {\n");
    
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    graph: ").append(toIndentedString(graph)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    urlText: ").append(toIndentedString(urlText)).append("\n");
    sb.append("    subItems: ").append(toIndentedString(subItems)).append("\n");
    sb.append("    isPositive: ").append(toIndentedString(isPositive)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    numIssues: ").append(toIndentedString(numIssues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

