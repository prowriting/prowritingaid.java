/*
 * ProWritingAid API V2
 * Official ProWritingAid API Version 2
 *
 * OpenAPI spec version: v2
 * Contact: hello@prowritingaid.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ProWritingAid.SDK;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Thesaurus meaning in one context
 */
@ApiModel(description = "Thesaurus meaning in one context")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-15T12:42:14.072+01:00")
public class EntryMeaning {
  @SerializedName("Meaning")
  private String meaning = null;

  @SerializedName("PartOfSpeech")
  private String partOfSpeech = null;

  @SerializedName("Synonyms")
  private List<String> synonyms = null;

  public EntryMeaning meaning(String meaning) {
    this.meaning = meaning;
    return this;
  }

   /**
   * Get meaning
   * @return meaning
  **/
  @ApiModelProperty(value = "")
  public String getMeaning() {
    return meaning;
  }

  public void setMeaning(String meaning) {
    this.meaning = meaning;
  }

  public EntryMeaning partOfSpeech(String partOfSpeech) {
    this.partOfSpeech = partOfSpeech;
    return this;
  }

   /**
   * Get partOfSpeech
   * @return partOfSpeech
  **/
  @ApiModelProperty(value = "")
  public String getPartOfSpeech() {
    return partOfSpeech;
  }

  public void setPartOfSpeech(String partOfSpeech) {
    this.partOfSpeech = partOfSpeech;
  }

  public EntryMeaning synonyms(List<String> synonyms) {
    this.synonyms = synonyms;
    return this;
  }

  public EntryMeaning addSynonymsItem(String synonymsItem) {
    if (this.synonyms == null) {
      this.synonyms = new ArrayList<String>();
    }
    this.synonyms.add(synonymsItem);
    return this;
  }

   /**
   * Get synonyms
   * @return synonyms
  **/
  @ApiModelProperty(value = "")
  public List<String> getSynonyms() {
    return synonyms;
  }

  public void setSynonyms(List<String> synonyms) {
    this.synonyms = synonyms;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntryMeaning entryMeaning = (EntryMeaning) o;
    return Objects.equals(this.meaning, entryMeaning.meaning) &&
        Objects.equals(this.partOfSpeech, entryMeaning.partOfSpeech) &&
        Objects.equals(this.synonyms, entryMeaning.synonyms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meaning, partOfSpeech, synonyms);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntryMeaning {\n");
    
    sb.append("    meaning: ").append(toIndentedString(meaning)).append("\n");
    sb.append("    partOfSpeech: ").append(toIndentedString(partOfSpeech)).append("\n");
    sb.append("    synonyms: ").append(toIndentedString(synonyms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

