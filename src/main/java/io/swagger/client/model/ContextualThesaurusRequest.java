/*
 * ProWritingAid API V2
 * Official ProWritingAid API Version 2
 *
 * OpenAPI spec version: v2
 * Contact: hello@prowritingaid.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ContextualThesaurusRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-28T18:23:44.793+01:00")
public class ContextualThesaurusRequest {
  @SerializedName("Context")
  private String context = null;

  @SerializedName("ContextStart")
  private Integer contextStart = null;

  @SerializedName("ContextEnd")
  private Integer contextEnd = 8;

  public ContextualThesaurusRequest context(String context) {
    this.context = context;
    return this;
  }

   /**
   * the word for the thesaurus call with surrounding context
   * @return context
  **/
  @ApiModelProperty(required = true, value = "the word for the thesaurus call with surrounding context")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public ContextualThesaurusRequest contextStart(Integer contextStart) {
    this.contextStart = contextStart;
    return this;
  }

   /**
   * the start position of the word to get suggestions for. 0 based
   * @return contextStart
  **/
  @ApiModelProperty(required = true, value = "the start position of the word to get suggestions for. 0 based")
  public Integer getContextStart() {
    return contextStart;
  }

  public void setContextStart(Integer contextStart) {
    this.contextStart = contextStart;
  }

  public ContextualThesaurusRequest contextEnd(Integer contextEnd) {
    this.contextEnd = contextEnd;
    return this;
  }

   /**
   * the end position of the word to get suggestions for. 0 based. Would be the same as the start pos for a 1 letter word
   * @return contextEnd
  **/
  @ApiModelProperty(required = true, value = "the end position of the word to get suggestions for. 0 based. Would be the same as the start pos for a 1 letter word")
  public Integer getContextEnd() {
    return contextEnd;
  }

  public void setContextEnd(Integer contextEnd) {
    this.contextEnd = contextEnd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContextualThesaurusRequest contextualThesaurusRequest = (ContextualThesaurusRequest) o;
    return Objects.equals(this.context, contextualThesaurusRequest.context) &&
        Objects.equals(this.contextStart, contextualThesaurusRequest.contextStart) &&
        Objects.equals(this.contextEnd, contextualThesaurusRequest.contextEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, contextStart, contextEnd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContextualThesaurusRequest {\n");
    
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    contextStart: ").append(toIndentedString(contextStart)).append("\n");
    sb.append("    contextEnd: ").append(toIndentedString(contextEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

